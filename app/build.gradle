plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
}

def versionMajor = 1
def versionMinor = 0
def versionPatch = 0

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.bootstrap"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode = versionMajor * 10000 + versionMinor * 100 + versionPatch
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        renderscriptTargetApi rootProject.targetSdkVersion
        renderscriptSupportModeEnabled true
    }

    flavorDimensions("bootstrap")
    productFlavors {
        prod {
            applicationId "com.bootstrap"
            dimension = "bootstrap"
            buildConfigField "String", "SERVER_URL", "\"https://bootstrap.com/api/\""
            resValue "string", "app_name", "Bootstrap"
        }

        staging {
            applicationId "com.bootstrap.dev"
            dimension = "bootstrap"
            buildConfigField "String", "SERVER_URL", "\"https://test.bootstrap.com/api/\""
            resValue "string", "app_name", "Bootstrap-Dev"
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled rootProject.proguardDebugModeFlag
            shrinkResources rootProject.proguardDebugModeFlag
            proguardFiles getDefaultProguardFile('proguard-android.txt'), '/proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    viewBinding {
        enabled = true
    }
    variantFilter {
        if (name == "stagingRelease") {
            setIgnore(true)
        }
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation "com.google.android.material:material:$material"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayout"

    implementation "androidx.recyclerview:recyclerview:$recyclerview"
    implementation "androidx.fragment:fragment-ktx:$fragment_ktx"
    implementation "androidx.activity:activity-ktx:$activity_ktx"

    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"

    implementation "com.android.support:multidex:$multidex"
    implementation "com.google.code.gson:gson:$gson"

    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofit_version"
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
    implementation "com.jakewharton.timber:timber:$timber"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinx_coroutines_android"
    implementation "org.koin:koin-androidx-viewmodel:$koin_version"
    implementation "org.koin:koin-androidx-fragment:$koin_version"
    implementation "org.koin:koin-androidx-ext:$koin_version"
    implementation "ru.terrakok.cicerone:cicerone:$cicerone"
    implementation "io.coil-kt:coil:$coil_version"
}